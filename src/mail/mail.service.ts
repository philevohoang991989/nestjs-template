import { MailerService } from '@nestjs-modules/mailer';
import { Inject, Injectable } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { WINSTON_MODULE_NEST_PROVIDER } from 'nest-winston';
import { Logger } from 'winston';

@Injectable()
export class MailService {
  constructor(
    private readonly mailerService: MailerService,
    @Inject(WINSTON_MODULE_NEST_PROVIDER) private readonly logger: Logger,
    private configService: ConfigService,
  ) {}
  sendWelcomeEmail(loginUrl: string, email: string, password: string) {
    this.logger.debug(`Sending welcome email to ${email}`);
    this.mailerService
      .sendMail({
        to: email,
        subject: 'Account Information Notification',
        template: `./welcome.hbs`,
        context: {
          loginUrl,
          email,
          password,
        },
      })
      .then(() => {
        this.logger.debug(`Welcome email sent to ${email}`);
        return true;
      })
      .catch((e) => {
        this.logger.error(e.message, e.stack, MailService.name);
      });
  }

  async sendResetPassEmail(
    url: string,
    email: string,
    language: string,
    name: string,
  ) {
    let subjects = 'Request reset password';
    let template = `<div class="main">
        <div style="padding-left: 20px">
            <p>Dear  ${name},</p>
            <p>We recently received a request for a password reset on your AI PAYROLL account.</p>
            <p>Please click the link below to reset your password</p>
            <div style="padding-left: 20px">
                <p>Link: <a href= ${url}>${this.configService.get('DOMAIN_URL')}</a></p>
            </div>
            <p>If you didn't ask for a password reset, secure your account and choose a new password by using the link above.</p>
            <p>For your protection, this verification link will only be active for <span style="color: red;">1</span> hour and will be invalid as you change your password successfully.</p>
            <br>
            <p>Regards,</p>
            <p style="font-weight: bold">AI PAYROLL</p>
            <p style="font-style: italic;">Please do not reply this email, it is automatically generated by AI Pro system</p>
        </div>
    </div>
    <style>
    .main{
        font-family: Calibri 
    }  
    </style>
    `;
    if (language == 'VN') {
      subjects = 'Yêu cầu đặt lại mật khẩu';
      template = `<div class="main">
        <div style="padding-left: 20px">
            <p>Xin chào  ${name},</p>
            <p>Bạn vừa gửi yêu cầu đặt lại mật khẩu. </p>
            <p>Vui lòng nhấn vào đường dẫn bên dưới để thiết lập mật khẩu mới:</p>
            <div style="padding-left: 20px">
                <p>Đường dẫn: <a href= ${url}>${this.configService.get('DOMAIN_URL')}</a></p>
            </div>
            <p>Vì lý do bảo mật, đường dẫn để đặt lại mật khẩu chỉ có thời hạn trong vòng 1 tiếng và sẽ mất hiệu lực sau khi bạn đặt mật khẩu thành công</p>
          
            <br>
            <p>Trân trọng,</p>
            <p style="font-weight: bold">AI PAYROLL,</p>
            <p style="font-style: italic;">Email này được gửi tự động và không nhận trả lời.</p>
        </div>
    </div>
    <style>
    .main{
        font-family: Calibri 
    }  
    </style>
    `;
    }
    this.logger.debug('Start sending reset password email');
    let rs = false;
    await this.mailerService
      .sendMail({
        to: email,
        from: this.configService.get('MAIL_FROM'),
        subject: subjects,
        html: template,
        context: {
          url: url,
          username: email,
          logo: 'https://bnk-aipro-dev.s3.ap-southeast-1.amazonaws.com/1660881696126_ai-pro-auth-logo.png',
        },
      })
      .then((success) => {
        console.log(success);
        this.logger.debug(`Send email success::: ${success}`);
        rs = true;
      })
      .catch((err) => {
        this.logger.debug(`Send email failed::: ${err}`);
        rs = false;
      });
    this.logger.debug('End test sending email');
    return rs;
  }
}
